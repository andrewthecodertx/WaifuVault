<%
    let usingBuket = typeof bucket !== "undefined";
    const baseSecurePath = usingBuket ? "admin/bucket" : "admin";
    const premiumBucket = usingBuket ? bucket.type === "PREMIUM" : false;
%>
<script>
    const baseUrl = "<%- process.env.BASE_URL; -%>/rest";
    const mainRul = "<%- process.env.BASE_URL; -%>";
    const fileSizeLimit = <%- process.env.FILE_SIZE_UPLOAD_LIMIT_MB * 1048576; -%>;
    const albumFileLimit = <%- process.env.ALBUM_FILE_LIMIT; %>;
    const isPremiumBucket = <%-premiumBucket-%>;
    const baseUrlSecureRest = `${baseUrl}/<%-baseSecurePath-%>`;


    function createErrorModal(id, errorText){
        const alert = document.createElement('div');
        alert.classList.add('alert', 'alert-danger');
        alert.innerText = errorText;
        return createBasicModal(id, 'Error', alert);
    }

    function createBasicModal(id, title, body, yesText, yesCallback, yesClassAdd, noText, noCallback, noClassAdd) {
        function handleEnter(e) {
            if(yesCallback && (e.keyCode === 13 || e.which === 13)) {
                yesCallback();
            }
        }
        document.addEventListener('keypress', handleEnter);

        const modal = document.createElement('div');
        modal.setAttribute('class', 'modal fade');
        modal.setAttribute('id', id);
        modal.setAttribute('tabindex', '-1');
        modal.setAttribute('role', 'dialog');
        modal.setAttribute('aria-hidden', 'true');

        const modalDialog = document.createElement('div');
        modalDialog.setAttribute('class', 'modal-dialog modal-md modal-dialog-centered');
        modal.appendChild(modalDialog);

        const modalContent = document.createElement('div');
        modalContent.setAttribute('class', 'modal-content');
        modalDialog.appendChild(modalContent);

        const modalHeader = document.createElement('div');
        modalHeader.setAttribute('class', 'modal-header');
        modalContent.appendChild(modalHeader);

        const modalTitle = document.createElement('h1');
        modalTitle.setAttribute('class', 'modal-title fs-5');
        modalTitle.innerText = title;
        const modalCloseBtn = document.createElement('button');
        modalCloseBtn.setAttribute('type','button');
        modalCloseBtn.setAttribute('class', 'btn-close');
        modalCloseBtn.setAttribute('data-bs-dismiss', 'modal');
        modalCloseBtn.setAttribute('aria-label', 'Close');
        modalHeader.appendChild(modalTitle);
        modalHeader.appendChild(modalCloseBtn);

        const modalBody = document.createElement('div');
        modalBody.setAttribute('class', 'modal-body');

        const container = document.createElement('div');
        container.setAttribute('class', 'container');
        modalBody.appendChild(container);

        const innerRow = document.createElement('div');
        innerRow.setAttribute('class', 'row');
        const innerCol = document.createElement('div');
        innerCol.setAttribute('class', 'col-md-12');
        innerRow.appendChild(innerCol);
        container.appendChild(innerRow);
        if(typeof body === 'string') {
            innerCol.innerHTML = `${body}`;
        } else {
            innerCol.appendChild(body);
        }
        modalContent.appendChild(modalBody);

        const modalFooter = document.createElement('div');
        modalFooter.setAttribute('class', 'modal-footer');

        if(yesText || noText) {
            const yesBtn = document.createElement('button');
            yesBtn.setAttribute('type','button');
            yesBtn.setAttribute('class', yesClassAdd ? 'btn '+yesClassAdd : 'btn');
            yesBtn.setAttribute('data-bs-dismiss', 'modal');
            yesBtn.innerText = yesText;
            if(yesCallback) {
                yesBtn.addEventListener('click', async () => await yesCallback());
            }
            modalFooter.appendChild(yesBtn);
            if(noText) {
                const noBtn = document.createElement('button');
                noBtn.setAttribute('type', 'button');
                noBtn.setAttribute('class', noClassAdd ? 'btn ' + noClassAdd : 'btn');
                noBtn.setAttribute('data-bs-dismiss', 'modal');
                noBtn.innerText = noText;
                if (noCallback) {
                    noBtn.addEventListener('click', async () => await noCallback());
                }
                modalFooter.appendChild(noBtn);
            }
            const cancelBtn = document.createElement('button');
            cancelBtn.setAttribute('type','button');
            cancelBtn.setAttribute('class', 'btn btn-secondary');
            cancelBtn.setAttribute('data-bs-dismiss', 'modal');
            cancelBtn.innerText = "Cancel";
            modalFooter.appendChild(cancelBtn);
        } else {
            const closeBtn = document.createElement('button');
            closeBtn.setAttribute('type','button');
            closeBtn.setAttribute('class', 'btn btn-primary');
            closeBtn.setAttribute('data-bs-dismiss', 'modal');
            closeBtn.innerText = "Close";
            modalFooter.appendChild(closeBtn);
        }
        modalContent.appendChild(modalFooter);

        const modalReturn = new bootstrap.Modal(modal);
        modal.addEventListener('hidden.bs.modal', () => {
            modal.remove();
            modalReturn.dispose();
            document.removeEventListener('keypress', handleEnter);
        })

        return modalReturn;
    }
</script>
<script src="/assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script>
<script src="/assets/vendor/highlightjs/curl.min.js"></script>
<script src="/assets/custom/js/main.js"></script>
